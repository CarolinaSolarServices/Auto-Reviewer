@startuml  

title Processing Flow

start

partition #HoneyDew "ColumnCorrection"{
    :Read the header of the data file;
    :Identify the index of each desired column based on its name;
    :1. Find index of 'Time'
    2. Find index of 'POA Irradiance'
    3. Find index of 'Ambient Temperature'
    4. Find index of 'Wind Speed'
    5. Find index of 'Meter Voltage'
    6. Find index of 'Meter AC power';
    note right: Depend on the standardization\nwork on column names.
    :Dynamically rename the inverter columns based on how many there are;
    :Create a new table structure according to the standard column order;
    :Transfer data from the original table to the new table based on the identified indices, in the desired order;

}

partition #AliceBlue "DetectingMissingData"{
fork
    #LightSteelBlue:Irradiance;
    note left: Data are always\nneeded in the\nIrradiance column\nduring daytime
    :Check if there is\nany missing value\nwithin this column;
    :Replace missing values with -999;
    note left: "-999" is a placeholder\nindicating there's an\nerror or missing data
    #MistyRose:Document issues in Data Issues sheet;
    note left: By documenting,\nsomeone can later\ninvestigate why data\nwas missing
    #LightSteelBlue: Temperature & Wind;
    note left: Temperature and Wind data matter only when 
        if(Irradiance >= 100?) then(yes)
            if(missing?) then(yes)
            :Replace missing values with -999;
            else(no)
            endif
        else(no)
        endif


    
fork again
    #LightSteelBlue:Meter;
    note left: Data are always needed\nin the Meter column\nwhen the corresponding\nIrrradiance value is above 0
    :Check if there is\nany missing value\nwithin this column;
    if(missing?) then(yes)
        #LightSteelBlue:Inverter;
        :Check if all inverter\nvalues corresponding\nto the missing meter\nvalues are present;
        if(all present?) then(yes)
        :Sum the inverter\nvalues and fill the\nresult into Meter;
        else(no)
        :Replace the missing Meter value with -999;
        #MistyRose:Document issues in Data Issues sheet;
        endif
    else(no)
    endif
end fork
}

partition #OldLace PreliminaryDiagnosis{
    #LightSteelBlue:Meter;
    if (missing?) then(no)
        if(Meter <= 0?) then(yes)
            #IndianRed:We can infer that the site is off;
        else(no)
            #Linen:The site should be on;
            if (voltage <= 0?) then(yes)
                #Moccasin:The voltmeter might\nbe malfunctioning;
            else(no)
            endif

        endif

    else(yes)
        #LightSteelBlue:Voltage;
        :Check voltage values\nacross the data file;
        floating note:The standard could\nbe further discussed
        if(half voltage values in the day > 0?) then(yes)
            if (voltage <= 0?) then(yes)
                #IndianRed:The site is probably off;
            else(no)
                #Linen:The site is probably on;
            endif
            
        else(no)
            #Moccasin:The voltmeter migh\nbe malfunctioning;
        endif
        
    endif

}

partition "ExternalInvestigation"{
    floating note: To be explored......
    :Check the work order on Fiix;
}


partition #Snow "FurtherProcessing" {
    :For any rows that still have missing data;
    floating note right: To be refined...
    if(Irradiance >= 100?) then(yes)
        if(The site is off or not communicating?) then(no)
            fork
            :For missing voltage;
            :Fill with values comparable to the rest of the dataset;
            fork again
            :For each missing inverter;
            #IMPLEMENTATION:According to more detailed inverter\nanalysis in the previous section;
                if(Inverter was producing) then
                :Fill with 1;
                else if(Inverter was off) then
                :Fill with 0;
                else if(Inverter status is unknown) then
                :Leave the cell blank;
                endif
            end fork
        else(no)
            :Inverters & Voltages;
            :Fill with 0;
        endif
    else(no)
    endif
}

stop
@enduml

